{"version":3,"sources":["components/SearchForm.js","components/ResultList.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","handleSort","ResultList","results","map","result","key","department","salary","SearchResultContainer","state","searchList","res","API","setState","sortSalary","sortie","sort","a","b","console","log","searchDept","dept","filtered","filter","el","event","target","preventDefault","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qOA2BeA,MAzBf,SAAoBC,GAClB,OACE,8BACE,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,UAAf,eACA,2BACEC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMM,OACbC,KAAK,SACLC,KAAK,OACLP,UAAU,eACVQ,YAAY,kBACZC,GAAG,WAEL,4BAAQC,QAASX,EAAMY,iBAAkBX,UAAU,wBAAnD,0BAGA,4BAAQU,QAASX,EAAMa,WAAYZ,UAAU,wBAA7C,qBCMOa,MAvBf,SAAoBd,GAClB,OACE,+BACO,+BACG,4BACE,oCACA,oCACA,wCAGJ,+BACCA,EAAMe,QAAQC,KAAI,SAAAC,GAAM,OACrB,wBAAIC,IAAKD,EAAOP,IACd,4BAAKO,EAAOV,MACZ,4BAAKU,EAAOE,YACZ,4BAAKF,EAAOG,eCXf,G,MACL,WACN,MAAO,CACL,CACEV,GAAI,EACJH,KAAM,iBACNY,WAAY,aACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,mBACNY,WAAY,aACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,kBACNY,WAAY,QACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,kBACNY,WAAY,QACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,eACNY,WAAY,cACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,YACNY,WAAY,cACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,iBACNY,WAAY,aACZC,OAAQ,KAEV,CACEV,GAAI,EACJH,KAAM,gBACNY,WAAY,aACZC,OAAQ,QC2BDC,E,4MA5EbC,MAAQ,CACNhB,OAAQ,GACRS,QAAS,I,EAcXQ,WAAa,WACX,IAAIC,EAAMC,IACV,EAAKC,SAAS,CAAEX,QAASS,K,EAG3BG,WAAa,WACX,IACIC,EADMH,IACOI,MAAK,SAASC,EAAGC,GAChC,OAAOD,EAAEV,OAASW,EAAEX,UAEtBY,QAAQC,IAAIL,GACZ,EAAKF,SAAS,CAAEX,QAASa,K,EAE3BM,WAAa,SAAAC,GACX,IACIC,EADMX,IACSY,QAAO,SAAmBC,GAC3C,OAAQA,EAAGnB,aAAegB,KAE5BH,QAAQC,IAAIG,GACZ,EAAKV,SAAS,CAAEX,QAASqB,K,EAG3BhC,kBAAoB,SAAAmC,GAClB,IAAMhC,EAAOgC,EAAMC,OAAOjC,KACpBF,EAAQkC,EAAMC,OAAOnC,MAC3B,EAAKqB,SAAL,eACGnB,EAAOF,K,EAKZO,iBAAmB,SAAA2B,GACjBA,EAAME,iBACN,EAAKP,WAAW,EAAKZ,MAAMhB,QAC3B0B,QAAQC,IAAI,EAAKX,MAAMhB,S,EAGzBO,WAAa,SAAA0B,GACXA,EAAME,iBACN,EAAKd,c,kEA1CLe,KAAKnB,e,+BAiDL,OACE,6BACE,kBAAC,EAAD,CACEjB,OAAQoC,KAAKpB,MAAMhB,OACnBM,iBAAkB8B,KAAK9B,iBACvBC,WAAY6B,KAAK7B,WACjBT,kBAAmBsC,KAAKtC,oBAE1B,kBAAC,EAAD,CAAYW,QAAS2B,KAAKpB,MAAMP,e,GAvEJ4B,aCErBC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9efdcbce.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Department:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Department Name\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Select from Department\n        </button>\n        <button onClick={props.handleSort} className=\"btn btn-primary mt-3\">\n          Sort by Salary\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction ResultList(props) {\n  return (\n    <table>\n           <thead>\n              <tr>\n                <th>Name</th>\n                <th>Dept</th>\n                <th>Salary</th>\n              </tr>\n            </thead>\n            <tbody>\n            {props.results.map(result =>\n                <tr key={result.id}>\n                  <td>{result.name}</td>\n                  <td>{result.department}</td>\n                  <td>{result.salary}</td>\n                </tr>\n              )}\n            </tbody>\n    </table>\n  );\n}\n\nexport default ResultList;\n","import axios from \"axios\";\n\nconst BASEURL = \"https://api.giphy.com/v1/gifs/search?q=\";\nconst APIKEY = \"&api_key=dc6zaTOxFJmzC&limit=20\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function() {\n    return [\n      {\n        id: 1,\n        name: \"Steve Sperling\",\n        department: \"accounting\",\n        salary: 90000\n      },\n      {\n        id: 2,\n        name: \"Leonard Rossbach\",\n        department: \"accounting\",\n        salary: 100000\n      },\n      {\n        id: 3,\n        name: \"Maureen Fetchik\",\n        department: \"sales\",\n        salary: 60000\n      },\n      {\n        id: 4,\n        name: \"Carol Kordonski\",\n        department: \"sales\",\n        salary: 70000\n      },\n      {\n        id: 5,\n        name: \"John Kestler\",\n        department: \"maintenance\",\n        salary: 50000\n      },\n      {\n        id: 6,\n        name: \"Joe Brack\",\n        department: \"maintenance\",\n        salary: 90000\n      },\n      {\n        id: 7,\n        name: \"Joseph Nemethe\",\n        department: \"production\",\n        salary: 30000\n      },\n      {\n        id: 8,\n        name: \"Nellie Cooper\",\n        department: \"production\",\n        salary: 40000\n      },\n    ]\n  }\n};\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    results: []\n  };\n\n  //\n  // When this component mounts, search the Giphy API for pictures of kittens\n  // This method is built-in to React and automatically runs after the component \n  // is rendered for the first time. componentDidMount runs after a component and \n  // all of its children have been initially rendered and mounted to the DOM, \n  // and have no further expected initialization steps\n  //\n  componentDidMount() {\n    this.searchList();\n  }\n\n  searchList = () => {\n    var res = API.search()\n    this.setState({ results: res })\n  };\n\n  sortSalary = () => {\n    var res = API.search()\n    var sortie = res.sort(function(a, b){\n      return a.salary - b.salary;\n    });\n    console.log(sortie)\n    this.setState({ results: sortie })\n  }\n  searchDept = dept => {\n    var res = API.search()\n    var filtered = res.filter(function checkDept(el){\n      return  el.department === dept\n    })\n    console.log(filtered)\n    this.setState({ results: filtered })\n  }\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, search the Giphy API for `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchDept(this.state.search);\n    console.log(this.state.search)\n  };\n  \n  handleSort = event => {\n    event.preventDefault();\n    this.sortSalary()\n  }\n\n  // render is a lifecycle event, but rather than only running once \n  // the render method is called every time our component's state is updated or \n  // anytime our component receives new props.\n  render() {\n    return (\n      <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleSort={this.handleSort}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results} />\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n\n\n/*\nDesign pattern: Containers and Presentation components\n\n1. Container components are primarily concerned with how things work and render very little, \n any of their own markup. Instead they mostly render other components and pass down the logic \n and data they need to work.\n\n2. Presentational components are concerned with how things look and typically don't contain \nany logic that doesn't have to do with their own individual UI.\n\nThis pattern helps us build components with little to no coupling that can more easily be reused in different parts of app \nor even across applications. It also lets us stub out our applications appearance by writing presentational components first, \nand then writing container components once we're ready to make things work.\n*/","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}